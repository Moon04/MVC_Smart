@model EmployeeViewModel

@{
    ViewBag.Title = ViewBag.Action + "Employee";
}

<br />
<h2>@ViewBag.Action Employee</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm())
        {
            if (ViewBag.Action == "Edit")
            {
                @Html.HiddenFor(m => m.Employee.Id)
            }
            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Name)
                @Html.EditorFor(m => m.Employee.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Employee.Name, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Email)
                @Html.EditorFor(m => m.Employee.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Employee.Email, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Email)
                @Html.EditorFor(m => m.Employee.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Employee.Email, null, new { @class = "text-danger" })
            </div>


            //List<SelectListItem> depts = Model.Departments.Select(d => new SelectListItem
            //{
            //    Text = d.Name,
            //    Value = d.Id.ToString()
            //}).ToList();

            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Fk_DepartmentId)
                @*<select name="Employee.Fk_DepartmentId" id="Employee_Fk_DepartmentId" class="form-control">
                    <option value="">Select Department</option>
                    @foreach (Department item in Model.Departments)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>*@
                @Html.DropDownListFor(
                    m => m.Employee.Fk_DepartmentId,
                    //depts,
                    new SelectList(Model.Departments, "Id", "Name"),
                    "Select Department",
                    new { @class="form-control" }
                    )
                @Html.ValidationMessageFor(m => m.Employee.Fk_DepartmentId, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Salary)
                @Html.EditorFor(m => m.Employee.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Employee.Salary, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Gender)
                @Html.EnumDropDownListFor(m => m.Employee.Gender, "Select Gender", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Employee.Gender, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Employee.Address)
                @Html.EditorFor(m => m.Employee.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Employee.Address, null, new { @class = "text-danger" })
            </div>

            <input type="submit" value="@ViewBag.Action" class="btn btn-primary" />
            @Html.ActionLink("Back To List", "Index", "Employee", null, new { @class = "btn btn-light" })
        }
    </div>
</div>





